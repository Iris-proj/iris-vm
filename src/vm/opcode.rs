/// IRIS VM - High-Performance OpCodes (No GC)
/// Optimized for interpreter-only speed, no garbage collection.
#[repr(u8)]
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum OpCode {
    Unknown = 0,

    // == Stack Operations ==
    PushConstant8 = 1,
    PushConstant16 = 2,
    PushNull = 3,
    PushTrue = 4,
    PushFalse = 5,
    PopStack = 6,
    DuplicateTop = 7,
    SwapTopTwo = 8,
    RotateTopThree = 9,
    PickStackItem = 10,
    RollStackItems = 11,
    PeekStack = 12,
    DropMultiple = 13,
    DuplicateMultiple = 14,
    SwapTopTwoPairs = 15,
    SwapMultiple = 16,

    // == Immediate Loads ==
    LoadImmediateI8 = 17,
    LoadImmediateI16 = 18,
    LoadImmediateI32 = 19,
    LoadImmediateI64 = 20,
    LoadImmediateF32 = 21,
    LoadImmediateF64 = 22,

    // == Local and Global Variables ==
    GetLocalVariable8 = 23,
    GetLocalVariable16 = 24,
    SetLocalVariable8 = 25,
    SetLocalVariable16 = 26,
    GetGlobalVariable8 = 27,
    DefineGlobalVariable8 = 28,
    SetGlobalVariable8 = 29,

    // == Object-Oriented Operations ==
    GetObjectProperty8 = 30,
    GetObjectProperty16 = 31,
    SetObjectProperty8 = 32,
    SetObjectProperty16 = 33,
    CreateNewInstance = 34,
    InvokeMethod8 = 35,
    InvokeMethod16 = 36,
    CallDynamicMethod = 37,
    GetSuperClassMethod8 = 38,
    GetSuperClassMethod16 = 39,
    DefineClass8 = 40,
    DefineClass16 = 41,
    InitializeClass = 42,
    CheckCastObject = 43,
    InstanceOfCheck = 44,
    LoadMethodHandle = 45,
    BindMethodHandle = 46,
    GetVirtualTable = 47,
    SetVirtualTable = 48,
    AllocateObject = 49,
    FreeObject = 50,

    // == Control Flow ==
    UnconditionalJump = 51,
    ShortJump = 52,
    JumpIfTrue = 53,
    JumpIfFalse = 54,
    JumpIfNull = 55,
    JumpIfNonNull = 56,
    LoopJump = 57,
    LoopStartMarker = 58,
    LoopEndMarker = 59,
    CallFunction = 60,
    ReturnFromFunction = 61,
    TailCallFunction = 62,
    TableSwitch = 63,
    LookupSwitch = 64,
    RangeSwitch = 65,
    ThrowException = 66,
    BeginTryBlock = 67,
    CatchException = 68,
    FinallyBlock = 69,
    EndTryBlock = 70,
    UnwindStack = 71,

    // == Logical Operations ==
    LogicalNotOperation = 72,
    LogicalAndOperation = 73,
    LogicalOrOperation = 74,
    BooleanAndOperation = 75,
    BooleanOrOperation = 76,

    // == Bitwise and Shift Operations ==
    BitwiseAndInt32 = 77,
    BitwiseAndInt64 = 78,
    BitwiseOrInt32 = 79,
    BitwiseOrInt64 = 80,
    BitwiseXorInt32 = 81,
    BitwiseXorInt64 = 82,
    BitwiseNotInt32 = 83,
    BitwiseNotInt64 = 84,
    LeftShiftInt32 = 85,
    LeftShiftInt64 = 86,
    RightShiftInt32 = 87,
    RightShiftInt64 = 88,
    UnsignedRightShiftInt32 = 89,
    UnsignedRightShiftInt64 = 90,
    RotateLeftInt32 = 91,
    RotateRightInt32 = 92,

    // == Arithmetic Operations ==
    AddInt32 = 93,
    AddInt64 = 94,
    AddFloat32 = 95,
    AddFloat64 = 96,
    SubtractInt32 = 97,
    SubtractInt64 = 98,
    SubtractFloat32 = 99,
    SubtractFloat64 = 100,
    MultiplyInt32 = 101,
    MultiplyInt64 = 102,
    MultiplyFloat32 = 103,
    MultiplyFloat64 = 104,
    DivideInt32 = 105,
    DivideInt64 = 106,
    DivideFloat32 = 107,
    DivideFloat64 = 108,
    ModuloInt32 = 109,
    ModuloInt64 = 110,
    NegateInt32 = 111,
    NegateInt64 = 112,
    NegateFloat32 = 113,
    NegateFloat64 = 114,
    IncrementInt32 = 115,
    DecrementInt32 = 116,
    IncrementInt64 = 117,
    DecrementInt64 = 118,
    AddInt32WithConstant = 119,
    AddInt64WithConstant = 120,
    MultiplyInt32WithConstant = 121,
    MultiplyInt64WithConstant = 122,
    FusedMultiplyAddFloat32 = 123,
    FusedMultiplyAddFloat64 = 124,
    AbsoluteInt32 = 125,
    AbsoluteInt64 = 126,
    AbsoluteFloat32 = 127,
    AbsoluteFloat64 = 128,
    FloorFloat32 = 129,
    CeilFloat32 = 130,
    RoundFloat32 = 131,
    TruncateFloat32 = 132,
    SquareRootFloat32 = 133,
    SquareRootFloat64 = 134,

    // == Comparison Operations ==
    EqualInt32 = 135,
    EqualInt64 = 136,
    EqualFloat32 = 137,
    EqualFloat64 = 138,
    NotEqualInt32 = 139,
    NotEqualInt64 = 140,
    NotEqualFloat32 = 141,
    NotEqualFloat64 = 142,
    GreaterThanInt32 = 143,
    GreaterThanInt64 = 144,
    GreaterThanFloat32 = 145,
    GreaterThanFloat64 = 146,
    LessThanInt32 = 147,
    LessThanInt64 = 148,
    LessThanFloat32 = 149,
    LessThanFloat64 = 150,
    GreaterOrEqualInt32 = 151,
    GreaterOrEqualInt64 = 152,
    GreaterOrEqualFloat32 = 153,
    GreaterOrEqualFloat64 = 154,
    LessOrEqualInt32 = 155,
    LessOrEqualInt64 = 156,
    LessOrEqualFloat32 = 157,
    LessOrEqualFloat64 = 158,
    CompareAndBranchEqualInt32 = 159,
    CompareAndBranchNotEqualInt32 = 160,
    CompareAndBranchLessThanInt32 = 161,
    CompareAndBranchGreaterThanInt32 = 162,

    // == Unsigned Comparison and Conversions ==
    GreaterUnsigned8 = 163,
    GreaterUnsigned16 = 164,
    GreaterUnsigned32 = 165,
    GreaterUnsigned64 = 166,
    LessUnsigned8 = 167,
    LessUnsigned16 = 168,
    LessUnsigned32 = 169,
    LessUnsigned64 = 170,
    GreaterOrEqualUnsigned8 = 171,
    GreaterOrEqualUnsigned16 = 172,
    GreaterOrEqualUnsigned32 = 173,
    GreaterOrEqualUnsigned64 = 174,
    LessOrEqualUnsigned8 = 175,
    LessOrEqualUnsigned16 = 176,
    LessOrEqualUnsigned32 = 177,
    LessOrEqualUnsigned64 = 178,
    ConvertInt32ToInt64 = 179,
    ConvertInt32ToFloat32 = 180,
    ConvertInt32ToFloat64 = 181,
    ConvertInt64ToInt32 = 182,
    ConvertInt64ToFloat32 = 183,
    ConvertInt64ToFloat64 = 184,
    ConvertFloat32ToInt32 = 185,
    ConvertFloat32ToInt64 = 186,
    ConvertFloat32ToFloat64 = 187,
    ConvertFloat64ToInt32 = 188,
    ConvertFloat64ToInt64 = 189,
    ConvertFloat64ToFloat32 = 190,

    // == Data Structures ==
    CreateNewArray8 = 191,
    CreateNewArray16 = 192,
    GetArrayLength = 193,
    ResizeArray = 194,
    GetArrayIndexInt32 = 195,
    SetArrayIndexInt32 = 196,
    GetArrayIndexFloat32 = 197,
    SetArrayIndexFloat32 = 198,
    GetArrayIndexFastInt32 = 199,
    SetArrayIndexFastInt32 = 200,
    CreateNewMap8 = 201,
    CreateNewMap16 = 202,
    MapContainsKey = 203,
    MapRemoveKey = 204,
    MapGetOrDefaultValue = 205,
    GetObjectField8 = 206,
    GetObjectField16 = 207,
    SetObjectField8 = 208,
    SetObjectField16 = 209,
    AllocateSlice = 210,

    // == Atomics and Concurrency ==
    AtomicAddInt32 = 211,
    AtomicSubtractInt32 = 212,
    AtomicCompareAndSwapInt32 = 213,
    EnterMonitor = 214,
    ExitMonitor = 215,
    YieldCurrentThread = 216,

    // == Inline Caches and Hot Calls ==
    CallWithInlineCache = 217,
    CallWithInlineCacheInline = 218,
    GetPropertyWithInlineCache = 219,
    GetPropertyWithInlineCacheInline = 220,
    SetPropertyWithInlineCache = 221,
    LoadMethodInlineCache = 222,
    MegamorphicMethodCall = 223,

    // == Miscellaneous ==
    PrintTopOfStack = 224,
    NoOperation = 225,
}

impl From<u8> for OpCode {
    fn from(byte: u8) -> Self {
        match byte {
            1 => OpCode::PushConstant8,
            2 => OpCode::PushConstant16,
            3 => OpCode::PushNull,
            4 => OpCode::PushTrue,
            5 => OpCode::PushFalse,
            6 => OpCode::PopStack,
            7 => OpCode::DuplicateTop,
            8 => OpCode::SwapTopTwo,
            9 => OpCode::RotateTopThree,
            10 => OpCode::PickStackItem,
            11 => OpCode::RollStackItems,
            12 => OpCode::PeekStack,
            13 => OpCode::DropMultiple,
            14 => OpCode::DuplicateMultiple,
            15 => OpCode::SwapTopTwoPairs,
            16 => OpCode::SwapMultiple,
            17 => OpCode::LoadImmediateI8,
            18 => OpCode::LoadImmediateI16,
            19 => OpCode::LoadImmediateI32,
            20 => OpCode::LoadImmediateI64,
            21 => OpCode::LoadImmediateF32,
            22 => OpCode::LoadImmediateF64,
            23 => OpCode::GetLocalVariable8,
            24 => OpCode::GetLocalVariable16,
            25 => OpCode::SetLocalVariable8,
            26 => OpCode::SetLocalVariable16,
            27 => OpCode::GetGlobalVariable8,
            28 => OpCode::DefineGlobalVariable8,
            29 => OpCode::SetGlobalVariable8,
            30 => OpCode::GetObjectProperty8,
            31 => OpCode::GetObjectProperty16,
            32 => OpCode::SetObjectProperty8,
            33 => OpCode::SetObjectProperty16,
            34 => OpCode::CreateNewInstance,
            35 => OpCode::InvokeMethod8,
            36 => OpCode::InvokeMethod16,
            37 => OpCode::CallDynamicMethod,
            38 => OpCode::GetSuperClassMethod8,
            39 => OpCode::GetSuperClassMethod16,
            40 => OpCode::DefineClass8,
            41 => OpCode::DefineClass16,
            42 => OpCode::InitializeClass,
            43 => OpCode::CheckCastObject,
            44 => OpCode::InstanceOfCheck,
            45 => OpCode::LoadMethodHandle,
            46 => OpCode::BindMethodHandle,
            47 => OpCode::GetVirtualTable,
            48 => OpCode::SetVirtualTable,
            49 => OpCode::AllocateObject,
            50 => OpCode::FreeObject,
            51 => OpCode::UnconditionalJump,
            52 => OpCode::ShortJump,
            53 => OpCode::JumpIfTrue,
            54 => OpCode::JumpIfFalse,
            55 => OpCode::JumpIfNull,
            56 => OpCode::JumpIfNonNull,
            57 => OpCode::LoopJump,
            58 => OpCode::LoopStartMarker,
            59 => OpCode::LoopEndMarker,
            60 => OpCode::CallFunction,
            61 => OpCode::ReturnFromFunction,
            62 => OpCode::TailCallFunction,
            63 => OpCode::TableSwitch,
            64 => OpCode::LookupSwitch,
            65 => OpCode::RangeSwitch,
            66 => OpCode::ThrowException,
            67 => OpCode::BeginTryBlock,
            68 => OpCode::CatchException,
            69 => OpCode::FinallyBlock,
            70 => OpCode::EndTryBlock,
            71 => OpCode::UnwindStack,
            72 => OpCode::LogicalNotOperation,
            73 => OpCode::LogicalAndOperation,
            74 => OpCode::LogicalOrOperation,
            75 => OpCode::BooleanAndOperation,
            76 => OpCode::BooleanOrOperation,
            77 => OpCode::BitwiseAndInt32,
            78 => OpCode::BitwiseAndInt64,
            79 => OpCode::BitwiseOrInt32,
            80 => OpCode::BitwiseOrInt64,
            81 => OpCode::BitwiseXorInt32,
            82 => OpCode::BitwiseXorInt64,
            83 => OpCode::BitwiseNotInt32,
            84 => OpCode::BitwiseNotInt64,
            85 => OpCode::LeftShiftInt32,
            86 => OpCode::LeftShiftInt64,
            87 => OpCode::RightShiftInt32,
            88 => OpCode::RightShiftInt64,
            89 => OpCode::UnsignedRightShiftInt32,
            90 => OpCode::UnsignedRightShiftInt64,
            91 => OpCode::RotateLeftInt32,
            92 => OpCode::RotateRightInt32,
            93 => OpCode::AddInt32,
            94 => OpCode::AddInt64,
            95 => OpCode::AddFloat32,
            96 => OpCode::AddFloat64,
            97 => OpCode::SubtractInt32,
            98 => OpCode::SubtractInt64,
            99 => OpCode::SubtractFloat32,
            100 => OpCode::SubtractFloat64,
            101 => OpCode::MultiplyInt32,
            102 => OpCode::MultiplyInt64,
            103 => OpCode::MultiplyFloat32,
            104 => OpCode::MultiplyFloat64,
            105 => OpCode::DivideInt32,
            106 => OpCode::DivideInt64,
            107 => OpCode::DivideFloat32,
            108 => OpCode::DivideFloat64,
            109 => OpCode::ModuloInt32,
            110 => OpCode::ModuloInt64,
            111 => OpCode::NegateInt32,
            112 => OpCode::NegateInt64,
            113 => OpCode::NegateFloat32,
            114 => OpCode::NegateFloat64,
            115 => OpCode::IncrementInt32,
            116 => OpCode::DecrementInt32,
            117 => OpCode::IncrementInt64,
            118 => OpCode::DecrementInt64,
            119 => OpCode::AddInt32WithConstant,
            120 => OpCode::AddInt64WithConstant,
            121 => OpCode::MultiplyInt32WithConstant,
            122 => OpCode::MultiplyInt64WithConstant,
            123 => OpCode::FusedMultiplyAddFloat32,
            124 => OpCode::FusedMultiplyAddFloat64,
            125 => OpCode::AbsoluteInt32,
            126 => OpCode::AbsoluteInt64,
            127 => OpCode::AbsoluteFloat32,
            128 => OpCode::AbsoluteFloat64,
            129 => OpCode::FloorFloat32,
            130 => OpCode::CeilFloat32,
            131 => OpCode::RoundFloat32,
            132 => OpCode::TruncateFloat32,
            133 => OpCode::SquareRootFloat32,
            134 => OpCode::SquareRootFloat64,
            135 => OpCode::EqualInt32,
            136 => OpCode::EqualInt64,
            137 => OpCode::EqualFloat32,
            138 => OpCode::EqualFloat64,
            139 => OpCode::NotEqualInt32,
            140 => OpCode::NotEqualInt64,
            141 => OpCode::NotEqualFloat32,
            142 => OpCode::NotEqualFloat64,
            143 => OpCode::GreaterThanInt32,
            144 => OpCode::GreaterThanInt64,
            145 => OpCode::GreaterThanFloat32,
            146 => OpCode::GreaterThanFloat64,
            147 => OpCode::LessThanInt32,
            148 => OpCode::LessThanInt64,
            149 => OpCode::LessThanFloat32,
            150 => OpCode::LessThanFloat64,
            151 => OpCode::GreaterOrEqualInt32,
            152 => OpCode::GreaterOrEqualInt64,
            153 => OpCode::GreaterOrEqualFloat32,
            154 => OpCode::GreaterOrEqualFloat64,
            155 => OpCode::LessOrEqualInt32,
            156 => OpCode::LessOrEqualInt64,
            157 => OpCode::LessOrEqualFloat32,
            158 => OpCode::LessOrEqualFloat64,
            159 => OpCode::CompareAndBranchEqualInt32,
            160 => OpCode::CompareAndBranchNotEqualInt32,
            161 => OpCode::CompareAndBranchLessThanInt32,
            162 => OpCode::CompareAndBranchGreaterThanInt32,
            163 => OpCode::GreaterUnsigned8,
            164 => OpCode::GreaterUnsigned16,
            165 => OpCode::GreaterUnsigned32,
            166 => OpCode::GreaterUnsigned64,
            167 => OpCode::LessUnsigned8,
            168 => OpCode::LessUnsigned16,
            169 => OpCode::LessUnsigned32,
            170 => OpCode::LessUnsigned64,
            171 => OpCode::GreaterOrEqualUnsigned8,
            172 => OpCode::GreaterOrEqualUnsigned16,
            173 => OpCode::GreaterOrEqualUnsigned32,
            174 => OpCode::GreaterOrEqualUnsigned64,
            175 => OpCode::LessOrEqualUnsigned8,
            176 => OpCode::LessOrEqualUnsigned16,
            177 => OpCode::LessOrEqualUnsigned32,
            178 => OpCode::LessOrEqualUnsigned64,
            179 => OpCode::ConvertInt32ToInt64,
            180 => OpCode::ConvertInt32ToFloat32,
            181 => OpCode::ConvertInt32ToFloat64,
            182 => OpCode::ConvertInt64ToInt32,
            183 => OpCode::ConvertInt64ToFloat32,
            184 => OpCode::ConvertInt64ToFloat64,
            185 => OpCode::ConvertFloat32ToInt32,
            186 => OpCode::ConvertFloat32ToInt64,
            187 => OpCode::ConvertFloat32ToFloat64,
            188 => OpCode::ConvertFloat64ToInt32,
            189 => OpCode::ConvertFloat64ToInt64,
            190 => OpCode::ConvertFloat64ToFloat32,
            191 => OpCode::CreateNewArray8,
            192 => OpCode::CreateNewArray16,
            193 => OpCode::GetArrayLength,
            194 => OpCode::ResizeArray,
            195 => OpCode::GetArrayIndexInt32,
            196 => OpCode::SetArrayIndexInt32,
            197 => OpCode::GetArrayIndexFloat32,
            198 => OpCode::SetArrayIndexFloat32,
            199 => OpCode::GetArrayIndexFastInt32,
            200 => OpCode::SetArrayIndexFastInt32,
            201 => OpCode::CreateNewMap8,
            202 => OpCode::CreateNewMap16,
            203 => OpCode::MapContainsKey,
            204 => OpCode::MapRemoveKey,
            205 => OpCode::MapGetOrDefaultValue,
            206 => OpCode::GetObjectField8,
            207 => OpCode::GetObjectField16,
            208 => OpCode::SetObjectField8,
            209 => OpCode::SetObjectField16,
            210 => OpCode::AllocateSlice,
            211 => OpCode::AtomicAddInt32,
            212 => OpCode::AtomicSubtractInt32,
            213 => OpCode::AtomicCompareAndSwapInt32,
            214 => OpCode::EnterMonitor,
            215 => OpCode::ExitMonitor,
            216 => OpCode::YieldCurrentThread,
            217 => OpCode::CallWithInlineCache,
            218 => OpCode::CallWithInlineCacheInline,
            219 => OpCode::GetPropertyWithInlineCache,
            220 => OpCode::GetPropertyWithInlineCacheInline,
            221 => OpCode::SetPropertyWithInlineCache,
            222 => OpCode::LoadMethodInlineCache,
            223 => OpCode::MegamorphicMethodCall,
            224 => OpCode::PrintTopOfStack,
            225 => OpCode::NoOperation,
            _ => OpCode::Unknown,
        }
    }
}